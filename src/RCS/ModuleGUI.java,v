head	391.1;
access;
symbols;
locks;
comment	@# @;


391.1
date	2009.02.10.20.28.48;	author -;	state -;
branches;
next	;


desc
@@


391.1
log
@-
@
text
@/**
 * Richard Caceres
 * rcaceres [at] ucla [dot] edu
 * $Id$ 
 */

import processing.core.PApplet;

public class ModuleGUI 
{
	public int mouseX, mouseY;
	public boolean mousePressed, mouseReleased, mouseIn, dragPressed;
	public int[] mousePressPos = {0, 0};

	public ModuleGUI inConnection, outConnection;
	
	public int width = 350, height = 200;
	public int depth = 0;
	
	// Should it know its x and y pos, or should it be "context free"?
	// These could just be used for the drawing methods.
	// Or the object that calls this could perform a push matrix before
	// it calls this, which would allow it to just draw like normal.
	
	public int xpos = (int)(Math.random() * 100), ypos = 0; 
	
	public int[] dragHitArea = { 0, 0, width, 15 };
	
	public int[] mInArea = {0, height / 6, width/10, height/6 * 4};
	public int[] mInAreaCenter = 
	{
			mInArea[0] + mInArea[2] / 2,
			mInArea[1] + mInArea[3] / 2
	};
	public int[] mOutArea = {width, height / 6, width/10, height/6 * 4 };
	public int[] mOutAreaCenter =
	{
			mOutArea[0] + mOutArea[2] / 2,
			mOutArea[1] + mOutArea[3] / 2
	};
	
	
	public ModuleGUI ()
	{
		
	}
	
	public void update(PApplet p)
	{
		//if (mouseIn)
		//p.println ("mouseX: "+mouseX + ", mouseY: " + mouseY);
	}
	
	public ModuleGUI getInConnection()
	{
		return inConnection;
	}
	
	public ModuleGUI getOutConnection()
	{
		return outConnection;
	}
	
	public void setInConnection(ModuleGUI m)
	{
		inConnection = m;
	}
	
	public void setOutConnection(ModuleGUI m)
	{
		outConnection = m;
	}
	
	public void clearInConnection()
	{
		inConnection = null;
	}
	
	public void clearOutConnection()
	{
		outConnection = null;
	}
	
	public boolean hasInConnected()
	{
		if (inConnection == null)
			return false;
		else 
			return true;
	}
	
	public boolean hasOutConnected()
	{
		if (outConnection == null)
			return false;
		else 
			return true;
	}
	
	public void draw(PApplet p)
	{
		
		if (dragPressed)
		{
			p.noStroke();
			p.fill(50, 100);
			p.rect(5, 5, width, height);
			
			p.rect(mOutArea[0] + 5, mOutArea[1] + 5, mOutArea[2], mOutArea[3]);

		}
		p.stroke(100);
		p.fill(255);
		p.rect(0, 0, width, height);
		p.line(0, 0, width, height);
		
		// Draw the menu bar
		p.fill(200);
		p.rect(dragHitArea[0], dragHitArea[1], dragHitArea[2], dragHitArea[3]);
		
		// Draw the terminals
		p.line(3, height/2, 10, height/2);
		p.rect(mInArea[0], mInArea[1], mInArea[2], mInArea[3]);
		
		p.rect(mOutArea[0], mOutArea[1], mOutArea[2], mOutArea[3]);

	}
	
}
@
